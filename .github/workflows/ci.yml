name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run static analysis
        run: |
          poetry run ruff check .
          poetry run mypy proofstack/

      - name: Run tests with coverage
        run: |
          poetry run pytest --cov=proofstack --cov-report=xml --cov-report=term-missing

      - name: Run multi-algorithm tests
        run: |
          poetry run python test_multi_algo.py

      - name: Run CLI smoke tests
        run: |
          poetry run proofstack --help
          poetry run proofstack init test_env
          poetry run proofstack bundle --mock --algo ppo
          poetry run proofstack version

      - name: Test Lean proof checking
        run: |
          poetry run lake build

      - name: Build documentation
        run: |
          poetry run mkdocs build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          docker build -t saferl-proofstack .

      - name: Test Docker image
        run: |
          docker run --rm saferl-proofstack proofstack --help
          docker run --rm saferl-proofstack proofstack version

  end-to-end:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install poetry
          poetry install

      - name: Run end-to-end test
        run: |
          poetry run python demo_cli.py
