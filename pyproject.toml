[tool.poetry]
name = "proofstack"
version = "0.1.0"
description = "SafeRL ProofStack: RL + Formal Proofs + Compliance Bundles"
authors = ["Your Name <you@example.com>"]
license = "Apache-2.0"
readme = "README.md"
packages = [{ include = "proofstack" }]

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
httpx = "==0.27.2"
weasyprint = "==65.1"
gymnasium = "==0.29.1"
stable-baselines3 = "^2.2.1"
torch = "==2.2.0"
typer = {extras = ["all"], version = "==0.12.0"}
rich = "==13.7.0"
fastapi = "==0.109.0"
uvicorn = {extras = ["standard"], version = "==0.27.0"}

[tool.poetry.group.dev.dependencies]
pytest = "==8.0.0"
pytest-cov = "==4.1.0"
hypothesis = "==6.98.0"
black = "^25.1"
ruff = "==0.2.0"
mypy = "==1.8.0"
pre-commit = "==3.6.0"
cyclonedx-bom = "==4.0.0"
mkdocs = "==1.5.3"
mkdocs-material = "==9.5.3"
mkdocs-mermaid2-plugin = "==0.6.0"
mkdocs-click = "==0.8.0"
jupyter = "==1.0.0"
nbconvert = "==7.16.0"

[tool.poetry.scripts]
proofstack = "proofstack.cli:app"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=proofstack",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=100"
]

[tool.coverage.run]
source = ["proofstack"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "stable_baselines3.*",
    "gymnasium.*",
    "torch.*",
    "weasyprint.*"
]
ignore_missing_imports = true 